{"version":3,"sources":["app/Auth.js","home/Home.js","app/Navbar.js","create-playlist/PlaylistCreationOption.js","create-playlist/PlaylistCreationPage.js","playlist/PlaylistTrackList.js","playlist/sorting.js","playlist/PlaylistSortDropdownMenu.js","playlist/PlaylistPage.js","user/UserPageHeader.js","user/UserPlaylistCreationPageSection.js","user/UserPlaylistList.js","user/UserPage.js","app/App.js","index.js"],"names":["Auth","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","token","history","location","hash","match","localStorage","setItem","react_default","a","createElement","react_router","to","Component","buildAuthUrl","concat","encodeQueryParams","client_id","response_type","redirect_uri","scope","params","keys","map","param","encodeURIComponent","join","Home","className","class","href","NavbarContent","id","react_router_dom","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Navbar_NavbarContent","PlaylistCreationOption","_ref","handleClick","onClick","PlaylistCreationPage","getRecentlyPlayedTracks","getCurrentUserRecentlyPlayedTracks","limit","then","recentTracks","items","item","track","getTopTracks","getCurrentUserTopTracks","time_range","tracks","createPlaylist","asyncToGenerator","regenerator_default","mark","_callee","user","trackUris","newPlaylist","wrap","_context","prev","next","t0","sent","uri","description","addTracksToPlaylist","setState","redirect","stop","_x","apply","arguments","_this2","init","getItem","getCurrentUserProfile","_this3","options","create_playlist_PlaylistCreationOption","PlaylistTrackListItem","_ref2","playlistTrack","src","album","imageUrl","alt","albumName","name","stringArtists","PlaylistTrackList","loading","PlaylistTrackList_PlaylistTrackListItem","key","sortingAttributes","attribute","sortPlaylistTracksByAttribute","_callee2","playlistId","insertionOrder","_context2","getInsertionOrder","abrupt","reduce","previousPromise","current","moveTrackToTop","_x4","_x5","Promise","resolve","_x2","_x3","_ref3","_callee3","playlistTracks","trackRefs","sortedTrackRefs","_context3","getPlaylistTracks","index","_","get","sortBy","reverse","trackRef","updateIndexes","_x6","_x7","_x8","array","i","length","j","oldIndex","reorderPlaylistTracks","rangeLength","insertBefore","PlaylistSortDropdownMenu","sortingButtons","aria-haspopup","aria-labelledby","PlaylistPage","_this$state","playlist","totalTracks","getPlaylist","_this$state2","playlist_PlaylistSortDropdownMenu","src_playlist_PlaylistTrackList","UserPageHeader","images","url","displayName","UserPlaylistCreationPageSection","UserPlaylistListItem","collaborative","public","UserPlaylistList","playlists","hasNextPage","playlistListItems","UserPlaylistList_UserPlaylistListItem","loadMoreButton","UserPage","loadMorePlaylists","page","getNextPage","nextPage","prevState","getCurrentUserPlaylists","userPlaylists","filter","owner","user_UserPageHeader","user_UserPlaylistCreationPageSection","src_user_UserPlaylistList","hasNext","App","Fragment","app_Navbar","exact","path","component","rootElement","document","getElementById","ReactDOM","render","basename","process","app_App"],"mappings":"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","file":"static/js/main.e772c79f.chunk.js","sourcesContent":["/* @flow */\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\ntype Props = {\n    history: any,\n};\n\ntype State = {\n    token: string,\n};\n\nclass Auth extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            token: props.history.location.hash.match(\n                '[#&]access_token=([^&]*)'\n            )[1],\n        };\n    }\n\n    componentDidMount() {\n        localStorage.setItem('token', this.state.token);\n    }\n\n    render() {\n        if (this.state.token) {\n            return <Redirect to=\"/playlists\" />;\n        } else {\n            return <Redirect to=\"/\" />;\n        }\n    }\n}\n\nexport default Auth;\n","/* @flow */\n\nimport React from 'react';\n\nimport './Home.css';\n\nconst Home = () => (\n    <div className=\"home\">\n        <div className=\"text-center\">\n            <h1 className=\"display-1\">Spotify Playlist Editor</h1>\n            <h4>Sort your playlists any way you want.</h4>\n            <h5>\n                <i class=\"fas fa-exclamation-triangle\" /> Note this is still a\n                work in progress, so use it with caution.{' '}\n                <i class=\"fas fa-exclamation-triangle\" />\n            </h5>\n            <a\n                className=\"btn btn-lg btn-outline-light my-2\"\n                href={buildAuthUrl()}\n            >\n                Connect to Spotify\n            </a>\n        </div>\n    </div>\n);\n\nconst buildAuthUrl = () => {\n    const params = {\n        client_id: '77edb9a2465445fc8b366da5105e7add',\n        response_type: 'token',\n        redirect_uri:\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:3000/auth'\n                : 'https://calluswhatyouwant.github.io/spotify-playlist-editor/auth',\n        scope: `playlist-read-private playlist-read-collaborative playlist-modify-public\n            playlist-modify-private user-read-recently-played user-top-read`,\n    };\n    return `https://accounts.spotify.com/authorize?${encodeQueryParams(\n        params\n    )}`;\n};\n\nconst encodeQueryParams = params =>\n    Object.keys(params)\n        .map(\n            param =>\n                `${encodeURIComponent(param)}=${encodeURIComponent(\n                    params[param]\n                )}`\n        )\n        .join('&');\n\nexport default Home;\n","/* @flow */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n    <nav className=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\n        <Link className=\"navbar-brand\" to=\"/\">\n            Spotify Playlist Editor\n        </Link>\n        <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n        >\n            <span className=\"navbar-toggler-icon\" />\n        </button>\n        <NavbarContent />\n    </nav>\n);\n\nconst NavbarContent = () => (\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/playlists\">\n                    Playlists\n                </Link>\n            </li>\n        </ul>\n    </div>\n);\n\nexport default Navbar;\n","/* @flow */\n\nimport React from 'react';\n\ntype Props = {\n    handleClick: ('recent' | 'top') => any,\n    type: 'recent' | 'top',\n};\n\nconst PlaylistCreationOption = ({ handleClick, type }: Props) => (\n    <div>\n        <h3>With your {type} tracks</h3>\n        <div className=\"center-wrapper\">\n            <button\n                className=\"btn btn-dark btn-purple px-4\"\n                onClick={() => handleClick(type)}\n            >\n                <h4 className=\"mb-0\">CREATE PLAYLIST</h4>\n            </button>\n        </div>\n        <hr className=\"my-4\" />\n    </div>\n);\n\nexport default PlaylistCreationOption;\n","/* @flow */\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {\n    createPlaylist,\n    init,\n    getCurrentUserProfile,\n    PrivateUser,\n    addTracksToPlaylist,\n    getCurrentUserRecentlyPlayedTracks,\n    getCurrentUserTopTracks,\n} from 'spotify-web-sdk';\n\nimport PlaylistCreationOption from './PlaylistCreationOption';\n\ntype State = {\n    redirect: boolean,\n    user: PrivateUser,\n};\n\nclass PlaylistCreationPage extends Component<{}, State> {\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            redirect: false,\n            user: {},\n        };\n    }\n\n    componentDidMount() {\n        init({ token: localStorage.getItem('token') });\n        getCurrentUserProfile().then(user => {\n            this.setState({ user });\n        });\n    }\n\n    getRecentlyPlayedTracks = () => {\n        return getCurrentUserRecentlyPlayedTracks({\n            limit: 50,\n        }).then(recentTracks => recentTracks.items.map(item => item.track));\n    };\n\n    getTopTracks = () => {\n        return getCurrentUserTopTracks({\n            limit: 50,\n            time_range: 'long_term',\n        }).then(tracks => tracks.items);\n    };\n\n    createPlaylist = async (type: 'top' | 'recent') => {\n        const { user } = this.state;\n        const tracks =\n            type === 'top'\n                ? await this.getTopTracks()\n                : await this.getRecentlyPlayedTracks();\n        const trackUris = tracks.map(track => track.uri);\n        const newPlaylist = await createPlaylist(user.id, 'Testing', {\n            description: \"Created with calluswhatyouwant's playlist editor.\",\n        });\n        addTracksToPlaylist(newPlaylist.id, trackUris).then(() =>\n            this.setState({ redirect: true })\n        );\n    };\n\n    render() {\n        const { redirect } = this.state;\n        const options = ['recent', 'top'].map(type => (\n            <PlaylistCreationOption\n                handleClick={this.createPlaylist}\n                type={type}\n            />\n        ));\n\n        return redirect ? (\n            <Redirect to=\"/playlists\" />\n        ) : (\n            <div className=\"playlist-page container mb-4 p-4 shadow\">\n                <h1 className=\"mb-4\">Create a new playlist...</h1>\n                {options}\n            </div>\n        );\n    }\n}\n\nexport default PlaylistCreationPage;\n","/* @flow */\n\nimport React from 'react';\nimport { PlaylistTrack, TrackSimplified } from 'spotify-web-sdk';\n\nimport './PlaylistTrackList.css';\n\ntype Props = {\n    loading: boolean,\n    tracks: TrackSimplified[],\n};\n\nconst PlaylistTrackList = ({ loading, tracks }: Props) => (\n    <div>\n        <h3 className=\"mt-3\">Tracks</h3>\n        <ul className=\"list-unstyled\">\n            {loading ? (\n                <h4 className=\"text-center\">\n                    A little bit of patience now...{' '}\n                    <i className=\"fas fa-circle-notch spinner\" />\n                </h4>\n            ) : (\n                tracks.map(track => (\n                    <PlaylistTrackListItem\n                        key={track.id}\n                        playlistTrack={track}\n                    />\n                ))\n            )}\n        </ul>\n    </div>\n);\n\ntype ItemProps = {\n    playlistTrack: PlaylistTrack,\n};\n\nconst PlaylistTrackListItem = ({ playlistTrack }: ItemProps) => {\n    const { track } = playlistTrack;\n    return (\n        <li className=\"media\">\n            <img\n                className=\"playlist-img mr-3\"\n                src={track.album.imageUrl}\n                alt={track.albumName}\n            />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0 mb-1\">\n                    <b>{track.name}</b>\n                </h5>\n                <p>{track.stringArtists}</p>\n            </div>\n        </li>\n    );\n};\n\nexport default PlaylistTrackList;\n","/* @flow */\n\nimport _ from 'lodash';\nimport {\n    init,\n    getPlaylistTracks,\n    reorderPlaylistTracks,\n} from 'spotify-web-sdk';\n\nexport const sortingAttributes = [\n    { description: 'name', attribute: 'track.name' },\n    { description: 'artist name', attribute: 'addedAt' },\n    { description: 'album name', attribute: 'track.albumName' },\n    { description: 'length', attribute: 'track.durationMs' },\n    { description: 'release date', attribute: 'track.album.releaseDate' },\n    { description: 'popularity', attribute: 'track.popularity' },\n    { description: 'addition date', attribute: 'track.album.releaseDate' },\n];\n\nexport const sortPlaylistTracksByAttribute = async (\n    playlistId: string,\n    limit: number,\n    attribute: string\n) => {\n    init({ token: localStorage.getItem('token') });\n    let insertionOrder = await getInsertionOrder(playlistId, limit, attribute);\n    return insertionOrder.reduce(async (previousPromise, current) => {\n        await previousPromise;\n        return moveTrackToTop(playlistId, current);\n    }, Promise.resolve());\n};\n\nconst getInsertionOrder = async (\n    playlistId: string,\n    limit: number,\n    attribute: string\n) => {\n    const playlistTracks = await getPlaylistTracks(playlistId, { limit });\n    const trackRefs = playlistTracks.items.map((item, index) => ({\n        index,\n        attribute: _.get(item, attribute),\n    }));\n    const sortedTrackRefs = _.sortBy(trackRefs, 'attribute').reverse();\n    const insertionOrder = sortedTrackRefs.map(trackRef => trackRef.index);\n    return updateIndexes(insertionOrder);\n};\n\nconst updateIndexes = (array: number[]) => {\n    for (let i = 0; i < array.length; i++) {\n        for (let j = i + 1; j < array.length; j++) {\n            if (array[i] > array[j]) array[j] += 1;\n        }\n    }\n    return array;\n};\n\nconst moveTrackToTop = (id: string, oldIndex: number) =>\n    reorderPlaylistTracks(id, oldIndex, { rangeLength: 1, insertBefore: 0 });\n","/* @flow */\n\nimport React from 'react';\n\nimport { sortingAttributes } from './sorting';\n\ntype Props = {\n    handleClick: (attribute: string) => void,\n};\n\nconst PlaylistSortDropdownMenu = ({ handleClick }: Props) => {\n    const sortingButtons = sortingAttributes.map(\n        ({ attribute, description }) => (\n            <button\n                className=\"text-uppercase dropdown-item\"\n                onClick={() => handleClick(attribute)}\n            >\n                {description}\n            </button>\n        )\n    );\n    return (\n        <div class=\"dropdown\">\n            <button\n                class=\"btn btn-dark dropdown-toggle\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n            >\n                SORT PLAYIST BY\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                {sortingButtons}\n            </div>\n        </div>\n    );\n};\n\nexport default PlaylistSortDropdownMenu;\n","/* @flow */\n\nimport React, { Component } from 'react';\nimport { init, getPlaylist, Playlist } from 'spotify-web-sdk';\n\nimport PlaylistTrackList from './PlaylistTrackList';\nimport PlaylistSortDropdownMenu from './PlaylistSortDropdownMenu';\n\nimport { sortPlaylistTracksByAttribute } from './sorting';\n\nimport './PlaylistPage.css';\n\ntype Props = {\n    match: any,\n};\n\ntype State = {\n    playlistId: string,\n    playlist: Playlist,\n    loading: boolean,\n};\n\nclass PlaylistPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            playlist: {},\n            playlistId: props.match.params.id,\n            loading: false,\n        };\n    }\n\n    componentDidMount() {\n        init({ token: localStorage.getItem('token') });\n        getPlaylist(this.state.playlistId).then(playlist =>\n            this.setState({ playlist })\n        );\n    }\n\n    handleClick = (attribute: string) => {\n        const { playlist, playlistId } = this.state;\n        this.setState({ loading: true });\n        sortPlaylistTracksByAttribute(\n            playlistId,\n            playlist.totalTracks,\n            attribute\n        ).then(() =>\n            getPlaylist(playlistId).then(playlist =>\n                this.setState({ playlist, loading: false })\n            )\n        );\n    };\n\n    render() {\n        const { playlist, loading } = this.state;\n\n        return playlist.name ? (\n            <div className=\"playlist-page container mb-4 p-4 shadow\">\n                <h1 className=\"mb-4\">{playlist.name}</h1>\n                <PlaylistSortDropdownMenu handleClick={this.handleClick} />\n                <PlaylistTrackList\n                    loading={loading}\n                    tracks={playlist.tracks.items}\n                />\n            </div>\n        ) : null;\n    }\n}\n\nexport default PlaylistPage;\n","/* @flow */\n\nimport React from 'react';\nimport { PrivateUser } from 'spotify-web-sdk';\n\ntype HeaderProps = {\n    user: PrivateUser,\n};\n\nconst UserPageHeader = ({ user }: HeaderProps) => (\n    <div class=\"user-page-header media p-3\">\n        <img\n            src={user.images ? user.images[0].url : ''}\n            alt=\"Avatar\"\n            className=\"user-image rounded-circle align-self-center\"\n        />\n        <div class=\"media-body align-self-center\">\n            <h1 className=\"text-center py-4 display-4\">\n                Welcome, {user.displayName}!\n            </h1>\n        </div>\n    </div>\n);\n\nexport default UserPageHeader;\n","/* @flow */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UserPlaylistCreationPageSection = () => (\n    <section className=\"mb-3\">\n        <h2>Create a new playlist</h2>\n        <p>\n            Highly recommended for testing, so that you don't overwrite your own\n            playlists.\n        </p>\n        <div className=\"center-wrapper\">\n            <Link className=\"btn btn-dark btn-purple mx-1\" to=\"/playlists/new\">\n                <h4 className=\"px-3 mb-0\">CREATE A NEW PLAYLIST</h4>\n            </Link>\n        </div>\n    </section>\n);\n\nexport default UserPlaylistCreationPageSection;\n","/* @flow */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PlaylistSimplified } from 'spotify-web-sdk';\n\nimport './UserPlaylistList.css';\n\ntype Props = {\n    playlists: PlaylistSimplified[],\n    handleClick: () => void,\n    hasNextPage: boolean,\n};\n\nconst UserPlaylistList = ({ playlists, handleClick, hasNextPage }: Props) => {\n    const playlistListItems = playlists.map(playlist => (\n        <UserPlaylistListItem playlist={playlist} />\n    ));\n\n    const loadMoreButton = (\n        <div className=\"center-wrapper\">\n            <button className=\"btn btn-dark btn-purple\" onClick={handleClick}>\n                <h4 className=\"px-3 mb-0\">LOAD MORE PLAYLISTS</h4>\n            </button>\n        </div>\n    );\n\n    return (\n        <div>\n            <h2 className=\"mb-4\">These are your playlists</h2>\n            {playlistListItems}\n            {hasNextPage && loadMoreButton}\n        </div>\n    );\n};\n\ntype ItemProps = {\n    playlist: PlaylistSimplified,\n};\n\nconst UserPlaylistListItem = ({ playlist }: ItemProps) => (\n    <div className=\"user-playlist\">\n        <h4>\n            {playlist.name}\n            <Link\n                className=\"badge badge-pill badge-dark mx-1\"\n                to={`/playlists/${playlist.id}`}\n            >\n                SORT / MANAGE\n            </Link>\n        </h4>\n        <h5>\n            <span className=\"badge badge-info mr-1\">\n                {playlist.totalTracks} tracks\n            </span>\n            <span className=\"badge badge-secondary\">\n                {playlist.collaborative\n                    ? 'COLLABORATIVE'\n                    : playlist.public\n                    ? 'PUBLIC'\n                    : 'PRIVATE'}\n            </span>\n        </h5>\n        <hr className=\"my-4\" />\n    </div>\n);\n\nexport default UserPlaylistList;\n","/* @flow */\n\nimport React, { Component } from 'react';\nimport {\n    init,\n    getCurrentUserPlaylists,\n    getCurrentUserProfile,\n    Page,\n    PlaylistSimplified,\n    PrivateUser,\n} from 'spotify-web-sdk';\n\nimport UserPageHeader from './UserPageHeader';\nimport UserPlaylistCreationPageSection from './UserPlaylistCreationPageSection';\nimport UserPlaylistList from './UserPlaylistList';\n\nimport './UserPage.css';\n\ntype Props = {\n    history: any,\n};\n\ntype State = {\n    page: Page<PlaylistSimplified>,\n    playlists: PlaylistSimplified[],\n    user: PrivateUser,\n};\n\nclass UserPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            page: {},\n            playlists: [],\n            user: {},\n        };\n    }\n\n    componentDidMount() {\n        init({ token: localStorage.getItem('token') });\n        getCurrentUserPlaylists({ limit: 5 }).then(page =>\n            this.setState({\n                page,\n                playlists: page.items,\n            })\n        );\n        getCurrentUserProfile().then(user =>\n            this.setState({\n                user,\n            })\n        );\n    }\n\n    loadMorePlaylists = () => {\n        this.state.page.getNextPage().then(nextPage =>\n            this.setState(prevState => {\n                const playlists = prevState.playlists.concat(nextPage.items);\n                return { page: nextPage, playlists };\n            })\n        );\n    };\n\n    render() {\n        const { playlists, page, user } = this.state;\n        const userPlaylists = playlists.filter(\n            playlist => playlist.owner.id === user.id\n        );\n\n        return page.items ? (\n            <div className=\"user-page container mb-4 p-4 shadow\">\n                <UserPageHeader user={user} />\n                <UserPlaylistCreationPageSection />\n                <UserPlaylistList\n                    playlists={userPlaylists}\n                    handleClick={this.loadMorePlaylists}\n                    hasNextPage={page.hasNext()}\n                />\n            </div>\n        ) : null;\n    }\n}\n\nexport default UserPage;\n","/* @flow */\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Auth from './Auth';\nimport Home from '../home/Home';\nimport Navbar from './Navbar';\nimport PlaylistCreationPage from '../create-playlist/PlaylistCreationPage';\nimport PlaylistPage from '../playlist/PlaylistPage';\nimport UserPage from '../user/UserPage';\n\nconst App = () => (\n    <>\n        <Navbar />\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/auth\" component={Auth} />\n            <Route exact path=\"/playlists\" component={UserPage} />\n            <Route\n                exact\n                path=\"/playlists/new\"\n                component={PlaylistCreationPage}\n            />\n            <Route exact path=\"/playlists/:id\" component={PlaylistPage} />\n        </Switch>\n    </>\n);\n\nexport default App;\n","/* @flow */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app/App';\n\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement) {\n    ReactDOM.render(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>,\n        rootElement\n    );\n}\n"],"sourceRoot":""}
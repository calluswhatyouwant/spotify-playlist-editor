{"version":3,"sources":["home/Home.js","app/Auth.js","playlist/PlaylistTrackList.js","playlist/sorting.js","playlist/PlaylistSortDropdownMenu.js","playlist/PlaylistPage.js","user/UserPlaylistList.js","user/UserPage.js","app/Navbar.js","app/App.js","index.js"],"names":["buildAuthUrl","concat","encodeQueryParams","client_id","response_type","redirect_uri","scope","params","Object","keys","map","param","encodeURIComponent","join","Home","react_default","a","createElement","className","class","href","Auth","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","token","history","location","hash","match","localStorage","setItem","react_router","to","Component","PlaylistTrackListItem","_ref2","track","playlistTrack","src","album","imageUrl","alt","albumName","name","stringArtists","PlaylistTrackList","_ref","loading","tracks","PlaylistTrackList_PlaylistTrackListItem","key","id","sortingAttributes","description","attribute","sortPlaylistTracksByAttribute","asyncToGenerator","regenerator_default","mark","_callee2","playlistId","limit","insertionOrder","wrap","_context2","prev","next","init","getItem","getInsertionOrder","sent","abrupt","reduce","_callee","previousPromise","current","_context","moveTrackToTop","stop","_x4","_x5","apply","arguments","Promise","resolve","_x","_x2","_x3","_ref3","_callee3","playlistTracks","trackRefs","sortedTrackRefs","_context3","getPlaylistTracks","items","item","index","_","get","sortBy","reverse","trackRef","updateIndexes","_x6","_x7","_x8","array","i","length","j","oldIndex","reorderPlaylistTracks","rangeLength","insertBefore","PlaylistSortDropdownMenu","handleClick","sortingButtons","onClick","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","PlaylistPage","_this$state","playlist","setState","totalTracks","then","getPlaylist","_this2","_this$state2","playlist_PlaylistSortDropdownMenu","src_playlist_PlaylistTrackList","UserPlaylistListItem","collaborative","public","UserPlaylistList","playlists","hasNextPage","playlistListItems","UserPlaylistList_UserPlaylistListItem","loadMoreButton","UserPage","loadMorePlaylists","page","getNextPage","nextPage","prevState","user","getCurrentUserPlaylists","getCurrentUserProfile","userPlaylists","filter","owner","UserPage_UserPageHeader","src_user_UserPlaylistList","hasNext","UserPageHeader","images","url","displayName","NavbarContent","Navbar","type","data-target","aria-controls","aria-label","Navbar_NavbarContent","App","Fragment","app_Navbar","exact","path","component","rootElement","document","getElementById","ReactDOM","render","react_router_dom","app_App"],"mappings":"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","file":"static/js/main.c0599939.chunk.js","sourcesContent":["/* @flow */\n\nimport React from 'react';\n\nimport './Home.css';\n\nconst Home = () => (\n    <div className=\"home\">\n        <div className=\"text-center\">\n            <h1 className=\"display-1\">Spotify Playlist Editor</h1>\n            <h4>Sort your playlists any way you want.</h4>\n            <h5>\n                <i class=\"fas fa-exclamation-triangle\" /> Note this is still a\n                work in progress, so use it with caution.{' '}\n                <i class=\"fas fa-exclamation-triangle\" />\n            </h5>\n            <a\n                className=\"btn btn-lg btn-outline-light my-2\"\n                href={buildAuthUrl()}\n            >\n                Connect to Spotify\n            </a>\n        </div>\n    </div>\n);\n\nconst buildAuthUrl = () => {\n    const params = {\n        client_id: '77edb9a2465445fc8b366da5105e7add',\n        response_type: 'token',\n        redirect_uri: 'http://localhost:3000/auth',\n        scope:\n            'playlist-read-private playlist-read-collaborative playlist-modify-public playlist-modify-private',\n    };\n    return `https://accounts.spotify.com/authorize?${encodeQueryParams(\n        params\n    )}`;\n};\n\nconst encodeQueryParams = params =>\n    Object.keys(params)\n        .map(\n            param =>\n                `${encodeURIComponent(param)}=${encodeURIComponent(\n                    params[param]\n                )}`\n        )\n        .join('&');\n\nexport default Home;\n","/* @flow */\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\ntype Props = {\n    history: any,\n};\n\ntype State = {\n    token: string,\n};\n\nclass Auth extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            token: props.history.location.hash.match(\n                '[#&]access_token=([^&]*)'\n            )[1],\n        };\n    }\n\n    componentDidMount() {\n        localStorage.setItem('token', this.state.token);\n    }\n\n    render() {\n        if (this.state.token) {\n            return <Redirect to=\"/playlists\" />;\n        } else {\n            return <Redirect to=\"/\" />;\n        }\n    }\n}\n\nexport default Auth;\n","/* @flow */\n\nimport React from 'react';\nimport { PlaylistTrack, TrackSimplified } from 'spotify-web-sdk';\n\nimport './PlaylistTrackList.css';\n\ntype Props = {\n    loading: boolean,\n    tracks: TrackSimplified[],\n};\n\nconst PlaylistTrackList = ({ loading, tracks }: Props) => (\n    <div>\n        <h3 className=\"mt-3\">Tracks</h3>\n        <ul className=\"list-unstyled\">\n            {loading ? (\n                <h4 className=\"text-center\">\n                    A little bit of patience now...{' '}\n                    <i className=\"fas fa-circle-notch spinner\" />\n                </h4>\n            ) : (\n                tracks.map(track => (\n                    <PlaylistTrackListItem\n                        key={track.id}\n                        playlistTrack={track}\n                    />\n                ))\n            )}\n        </ul>\n    </div>\n);\n\ntype ItemProps = {\n    playlistTrack: PlaylistTrack,\n};\n\nconst PlaylistTrackListItem = ({ playlistTrack }: ItemProps) => {\n    const { track } = playlistTrack;\n    return (\n        <li className=\"media\">\n            <img\n                className=\"playlist-img mr-3\"\n                src={track.album.imageUrl}\n                alt={track.albumName}\n            />\n            <div className=\"media-body\">\n                <h5 className=\"mt-0 mb-1\">\n                    <b>{track.name}</b>\n                </h5>\n                <p>{track.stringArtists}</p>\n            </div>\n        </li>\n    );\n};\n\nexport default PlaylistTrackList;\n","/* @flow */\n\nimport _ from 'lodash';\nimport {\n    init,\n    getPlaylistTracks,\n    reorderPlaylistTracks,\n} from 'spotify-web-sdk';\n\nexport const sortingAttributes = [\n    { description: 'name', attribute: 'track.name' },\n    { description: 'artist name', attribute: 'addedAt' },\n    { description: 'album name', attribute: 'track.albumName' },\n    { description: 'length', attribute: 'track.durationMs' },\n    { description: 'release date', attribute: 'track.album.releaseDate' },\n    { description: 'popularity', attribute: 'track.popularity' },\n    { description: 'addition date', attribute: 'track.album.releaseDate' },\n];\n\nexport const sortPlaylistTracksByAttribute = async (\n    playlistId: string,\n    limit: number,\n    attribute: string\n) => {\n    init({ token: localStorage.getItem('token') });\n    let insertionOrder = await getInsertionOrder(playlistId, limit, attribute);\n    return insertionOrder.reduce(async (previousPromise, current) => {\n        await previousPromise;\n        return moveTrackToTop(playlistId, current);\n    }, Promise.resolve());\n};\n\nconst getInsertionOrder = async (\n    playlistId: string,\n    limit: number,\n    attribute: string\n) => {\n    const playlistTracks = await getPlaylistTracks(playlistId, { limit });\n    const trackRefs = playlistTracks.items.map((item, index) => ({\n        index,\n        attribute: _.get(item, attribute),\n    }));\n    const sortedTrackRefs = _.sortBy(trackRefs, 'attribute').reverse();\n    const insertionOrder = sortedTrackRefs.map(trackRef => trackRef.index);\n    return updateIndexes(insertionOrder);\n};\n\nconst updateIndexes = (array: number[]) => {\n    for (let i = 0; i < array.length; i++) {\n        for (let j = i + 1; j < array.length; j++) {\n            if (array[i] > array[j]) array[j] += 1;\n        }\n    }\n    return array;\n};\n\nconst moveTrackToTop = (id: string, oldIndex: number) =>\n    reorderPlaylistTracks(id, oldIndex, { rangeLength: 1, insertBefore: 0 });\n","/* @flow */\n\nimport React from 'react';\n\nimport { sortingAttributes } from './sorting';\n\ntype Props = {\n    handleClick: (attribute: string) => void,\n};\n\nconst PlaylistSortDropdownMenu = ({ handleClick }: Props) => {\n    const sortingButtons = sortingAttributes.map(\n        ({ attribute, description }) => (\n            <button\n                className=\"text-uppercase dropdown-item\"\n                onClick={() => handleClick(attribute)}\n            >\n                {description}\n            </button>\n        )\n    );\n    return (\n        <div class=\"dropdown\">\n            <button\n                class=\"btn btn-dark dropdown-toggle\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n            >\n                SORT PLAYLIST BY\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                {sortingButtons}\n            </div>\n        </div>\n    );\n};\n\nexport default PlaylistSortDropdownMenu;\n","/* @flow */\n\nimport React, { Component } from 'react';\nimport { init, getPlaylist, Playlist } from 'spotify-web-sdk';\n\nimport PlaylistTrackList from './PlaylistTrackList';\nimport PlaylistSortDropdownMenu from './PlaylistSortDropdownMenu';\n\nimport { sortPlaylistTracksByAttribute } from './sorting';\n\nimport './PlaylistPage.css';\n\ntype Props = {\n    match: any,\n};\n\ntype State = {\n    playlistId: string,\n    playlist: Playlist,\n    loading: boolean,\n};\n\nclass PlaylistPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            playlist: {},\n            playlistId: props.match.params.id,\n            loading: false,\n        };\n    }\n\n    componentDidMount() {\n        init({ token: localStorage.getItem('token') });\n        getPlaylist(this.state.playlistId).then(playlist =>\n            this.setState({ playlist })\n        );\n    }\n\n    handleClick = (attribute: string) => {\n        const { playlist, playlistId } = this.state;\n        this.setState({ loading: true });\n        sortPlaylistTracksByAttribute(\n            playlistId,\n            playlist.totalTracks,\n            attribute\n        ).then(() =>\n            getPlaylist(playlistId).then(playlist =>\n                this.setState({ playlist, loading: false })\n            )\n        );\n    };\n\n    render() {\n        const { playlist, loading } = this.state;\n\n        return playlist.name ? (\n            <div className=\"playlist-page container mb-4 p-4 shadow\">\n                <h1 className=\"mb-4\">{playlist.name}</h1>\n                <PlaylistSortDropdownMenu handleClick={this.handleClick} />\n                <PlaylistTrackList\n                    loading={loading}\n                    tracks={playlist.tracks.items}\n                />\n            </div>\n        ) : null;\n    }\n}\n\nexport default PlaylistPage;\n","/* @flow */\n\nimport React from 'react';\nimport { PlaylistSimplified } from 'spotify-web-sdk';\n\nimport './UserPlaylistList.css';\n\ntype Props = {\n    playlists: PlaylistSimplified[],\n    handleClick: () => void,\n    hasNextPage: boolean,\n};\n\nconst UserPlaylistList = ({ playlists, handleClick, hasNextPage }: Props) => {\n    const playlistListItems = playlists.map(playlist => (\n        <UserPlaylistListItem playlist={playlist} />\n    ));\n\n    const loadMoreButton = (\n        <div className=\"load-more-button-wrapper\">\n            <button\n                className=\"btn btn-dark load-more-button\"\n                onClick={handleClick}\n            >\n                <h4 className=\"px-3 mb-0\">LOAD MORE PLAYLISTS</h4>\n            </button>\n        </div>\n    );\n\n    return (\n        <div>\n            <h2 className=\"mb-4\">These are your playlists</h2>\n            {playlistListItems}\n            {hasNextPage && loadMoreButton}\n        </div>\n    );\n};\n\ntype ItemProps = {\n    playlist: PlaylistSimplified,\n};\n\nconst UserPlaylistListItem = ({ playlist }: ItemProps) => (\n    <div className=\"user-playlist\">\n        <h4>\n            {playlist.name}\n            <a\n                href={`/playlists/${playlist.id}`}\n                className=\"badge badge-pill badge-dark mx-1\"\n            >\n                SORT / MANAGE\n            </a>\n        </h4>\n        <h5>\n            <span className=\"badge badge-info mr-1\">\n                {playlist.totalTracks} tracks\n            </span>\n            <span className=\"badge badge-secondary\">\n                {playlist.collaborative\n                    ? 'COLLABORATIVE'\n                    : playlist.public\n                    ? 'PUBLIC'\n                    : 'PRIVATE'}\n            </span>\n        </h5>\n        <hr className=\"my-4\" />\n    </div>\n);\n\nexport default UserPlaylistList;\n","/* @flow */\n\nimport React, { Component } from 'react';\nimport {\n    init,\n    getCurrentUserPlaylists,\n    getCurrentUserProfile,\n    Page,\n    PlaylistSimplified,\n    PrivateUser,\n} from 'spotify-web-sdk';\n\nimport UserPlaylistList from './UserPlaylistList';\n\nimport './UserPage.css';\n\ntype Props = {\n    history: any,\n};\n\ntype State = {\n    page: Page<PlaylistSimplified>,\n    playlists: PlaylistSimplified[],\n    user: PrivateUser,\n};\n\nclass UserPage extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            page: {},\n            playlists: [],\n            user: {},\n        };\n    }\n\n    componentDidMount() {\n        init({ token: localStorage.getItem('token') });\n        getCurrentUserPlaylists({ limit: 5 }).then(page =>\n            this.setState({\n                page,\n                playlists: page.items,\n            })\n        );\n        getCurrentUserProfile().then(user =>\n            this.setState({\n                user,\n            })\n        );\n    }\n\n    loadMorePlaylists = () => {\n        this.state.page.getNextPage().then(nextPage =>\n            this.setState(prevState => {\n                const playlists = prevState.playlists.concat(nextPage.items);\n                return { page: nextPage, playlists };\n            })\n        );\n    };\n\n    render() {\n        const { playlists, page, user } = this.state;\n        const userPlaylists = playlists.filter(\n            playlist => playlist.owner.id === user.id\n        );\n\n        return page.items ? (\n            <div className=\"user-page container mb-4 p-4 shadow\">\n                <UserPageHeader user={user} />\n                <UserPlaylistList\n                    playlists={userPlaylists}\n                    handleClick={this.loadMorePlaylists}\n                    hasNextPage={page.hasNext()}\n                />\n            </div>\n        ) : null;\n    }\n}\n\ntype HeaderProps = {\n    user: PrivateUser,\n};\n\nconst UserPageHeader = ({ user }: HeaderProps) => (\n    <div class=\"user-page-header media p-3\">\n        <img\n            src={user.images[0].url}\n            alt=\"Avatar\"\n            className=\"user-image rounded-circle align-self-center\"\n        />\n        <div class=\"media-body align-self-center\">\n            <h1 className=\"text-center py-4 display-4\">\n                Welcome, {user.displayName}!\n            </h1>\n        </div>\n    </div>\n);\n\nexport default UserPage;\n","/* @flow */\n\nimport React from 'react';\n\nconst Navbar = () => (\n    <nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\n        <a class=\"navbar-brand\" href=\"/\">\n            Spotify Playlist Editor\n        </a>\n        <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n        >\n            <span class=\"navbar-toggler-icon\" />\n        </button>\n        <NavbarContent />\n    </nav>\n);\n\nconst NavbarContent = () => (\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n                <a class=\"nav-link\" href=\"/playlists\">\n                    Playlists\n                </a>\n            </li>\n        </ul>\n    </div>\n);\n\nexport default Navbar;\n","/* @flow */\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../home/Home';\nimport Auth from './Auth';\nimport PlaylistPage from '../playlist/PlaylistPage';\nimport UserPage from '../user/UserPage';\nimport Navbar from './Navbar';\n\nconst App = () => (\n    <>\n        <Navbar />\n        <h1 className=\"pt-4\">Testing</h1>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/auth\" component={Auth} />\n            <Route exact path=\"/playlists\" component={UserPage} />\n            <Route exact path=\"/playlists/:id\" component={PlaylistPage} />\n        </Switch>\n    </>\n);\n\nexport default App;\n","/* @flow */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app/App';\n\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement) {\n    ReactDOM.render(<BrowserRouter><App /></BrowserRouter>, rootElement);\n}\n"],"sourceRoot":""}